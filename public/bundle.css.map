{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../GameButton.svelte",
    "../Summary.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { fly } from \"svelte/transition\";\n  import GameButton from \"./GameButton.svelte\";\n  import Summary from \"./Summary.svelte\";\n  import data from \"./stateData.js\";\n  import shuffle from \"./shuffle.js\";\n  import { round, points, givenAnswers } from \"./stores.js\";\n\n  let states = shuffle(data);\n  let currentRoundNumber,\n    candidateStatesOfThisRound,\n    currentStateInQuestion,\n    currentCorrectAnswer;\n\n  let totalRounds = 5;\n\n  round.subscribe(value => {\n    currentRoundNumber = value;\n    if (currentRoundNumber === 0) {\n      states = shuffle(data);\n    }\n    if (currentRoundNumber < totalRounds) {\n      candidateStatesOfThisRound = states.slice(\n        currentRoundNumber * 5,\n        currentRoundNumber * 5 + 5\n      );\n      currentStateInQuestion = candidateStatesOfThisRound[0][\"name\"];\n      currentCorrectAnswer = candidateStatesOfThisRound[0][\"capitol\"];\n      candidateStatesOfThisRound = shuffle(candidateStatesOfThisRound);\n    }\n  });\n</script>\n\n<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<main>\n  {#if currentRoundNumber < totalRounds}\n    <div>\n      Runde: {currentRoundNumber + 1}/{totalRounds}<br/>\n      Punkte: {$points}/{totalRounds}\n    </div>\n    \n    <h2>Was ist die Hauptstadt von:</h2>\n    <h1>{currentStateInQuestion}</h1>\n\n    {#each candidateStatesOfThisRound as {capitol}}\n      <GameButton \n        state={currentStateInQuestion}\n        answer={capitol}\n        correctAnswer={currentCorrectAnswer}\n      />\n    {/each}\n\t{:else}\n    <Summary />\n  {/if}\n</main>",
    "<script>\n\timport { round, points, givenAnswers } from \"./stores.js\";\n\n\texport let answer;\n\texport let state;\n\texport let correctAnswer;\n\n\tfunction handleClick() {\n\t  round.update(r => r + 1);\n\t  $givenAnswers = [\n\t    ...$givenAnswers,\n\t    { state: state, answer: answer, correctAnswer: correctAnswer }\n\t  ];\n\t  if (answer === correctAnswer) {\n\t    points.update(p => p + 1);\n\t  }\n\t}\n</script>\n\n<style>\n\tbutton {\n\t  background: #29262b;\n\t  color: white;\n\t  border: none;\n\t  padding: 8px 12px;\n\t  border-radius: 2px;\n\t  display: block;\n\t  margin: 10px;\n\t}\n</style>\n\n<button on:click={handleClick}>\n  {answer}\n</button>",
    "<script>\r\n  import { round, points, givenAnswers } from \"./stores.js\";\r\n\r\n  function resetGame() {\r\n    round.set(0);\r\n    points.set(0);\r\n    givenAnswers.set([]);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .right {\r\n    font-weight: bold;\r\n    color: green;\r\n  }\r\n  .wrong {\r\n    text-decoration: line-through;\r\n    color: red;\r\n  }\r\n</style>\r\n\r\n<h1>Ende</h1>\r\n<h2>{$points} Punkt{$points !== 1 ? \"e\" : \"\"}</h2>\r\n\r\n{#each $givenAnswers as {state, answer, correctAnswer}}\r\n  <p> \r\n    <strong>{state}:</strong>\r\n    {#if answer === correctAnswer}\r\n      üëç <span class=\"right\">{answer}</span> \r\n    {:else}\r\n      üëé <span class=\"wrong\">{answer}</span> üëâ <span class=\"right\">{correctAnswer}</span>\r\n    {/if}\r\n  </p>\r\n{/each}\r\n\r\n<button on:click={resetGame}>Nochmal!</button>"
  ],
  "names": [],
  "mappings": "AAkCE,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACpB,CAAC;ACjBF,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AACd,CAAC;ACjBA,MAAM,eAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,KAAK,AACd,CAAC,AACD,MAAM,eAAC,CAAC,AACN,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,GAAG,AACZ,CAAC"
}